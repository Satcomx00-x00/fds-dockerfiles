name: Docker Image CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-dockerfile-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Generate list of Dockerfiles
        run: |
          echo '{"dockerfiles":[' > dockerfile_list.json
          find . -type f \( -name "Dockerfile" -o -name "*.Dockerfile" \) -printf '"%p", ' >> dockerfile_list.json
          echo 'null]}' >> dockerfile_list.json
          sed -i '$ s/, null]/]/' dockerfile_list.json # Removes the trailing comma and null
      - name: Print dockerfile_list.json
        run: cat dockerfile_list.json
      - name: Set output
        id: set-matrix
        run: |
          MATRIX=$(jq -c . dockerfile_list.json)
          echo "::set-output name=matrix::${MATRIX}"
          echo "MATRIX_JSON=${MATRIX}" >> $GITHUB_ENV

  build:
    needs: generate-dockerfile-list
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerfile: ${{fromJson(needs.generate-dockerfile-list.outputs.matrix).dockerfiles}}
    steps:
      - uses: actions/checkout@v3

      - name: Set project name
        run: echo "PROJECT_NAME=$(echo $GITHUB_REPOSITORY | sed 's|.*/||')" >> $GITHUB_ENV

      - name: Build the Docker image
        run: |
          if [ -f "${{ matrix.dockerfile }}" ]; then
            docker build . --file ${{ matrix.dockerfile }} --tag ${{ secrets.DOCKERHUB_LOGIN }}/${{ env.PROJECT_NAME }}:$(basename ${{ matrix.dockerfile }} .Dockerfile)
          fi

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_LOGIN }} --password-stdin

      - name: Push the Docker image
        run: |
          if [ -f "${{ matrix.dockerfile }}" ]; then
            docker push ${{ secrets.DOCKERHUB_LOGIN }}/${{ env.PROJECT_NAME }}:$(basename ${{ matrix.dockerfile }} .Dockerfile)
          fi
