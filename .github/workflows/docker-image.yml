name: Docker Image CI
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  generate-dockerfile-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Generate list of Dockerfiles
        run: |
          echo '{"dockerfiles":[' > dockerfile_list.json
          find . -type f \( -name "Dockerfile" -o -name "*.Dockerfile" \) -printf '"%p", ' >> dockerfile_list.json
          echo 'null]}' >> dockerfile_list.json
          sed -i '$ s/, null]/]/' dockerfile_list.json
      - name: Print dockerfile_list.json
        run: cat dockerfile_list.json
      - name: Set output
        id: set-matrix
        run: |
          MATRIX=$(jq -c '{dockerfiles: [.dockerfiles[] | select(. != null)]}' dockerfile_list.json)
          echo "::set-output name=matrix::${MATRIX}"
          echo "MATRIX_JSON=${MATRIX}" >> $GITHUB_ENV
  build:
    needs: generate-dockerfile-list
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerfile: ${{fromJson(needs.generate-dockerfile-list.outputs.matrix).dockerfiles}}
    steps:
      - uses: actions/checkout@v3
      - name: Set project name
        run: echo "PROJECT_NAME=$(echo $GITHUB_REPOSITORY | sed 's|.*/||')" >> $GITHUB_ENV
      - name: Create entrypoint script
        run: |
          DOCKERFILE_DIR=$(dirname ${{ matrix.dockerfile }})
          cat > $DOCKERFILE_DIR/entrypoint.sh << 'EOF'
          #!/bin/bash
          set -e

          # Set FDS_FILE_PATH if not provided but a file is passed as an argument
          
          if [ -z "${FDS_FILE_PATH}" ] && [ $# -gt 0 ]; then
              export FDS_FILE_PATH="${@: -1}"
          fi

          # Default command if none provided
          if [ $# -eq 0 ]; then
              exec mpiexec -n ${MPI:-1} fds
          else
              exec "$@"
          fi
          EOF
          chmod +x $DOCKERFILE_DIR/entrypoint.sh
      - name: Build and Tag Docker image
        run: |
          DOCKERFILE_PATH="${{ matrix.dockerfile }}"
          TAG=$(echo "$DOCKERFILE_PATH" | awk -F/ '{print $(NF-1)}' | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${{ secrets.DOCKERHUB_LOGIN }}/fds:$TAG"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "Building Docker image: $IMAGE_NAME"
          docker build . --file "$DOCKERFILE_PATH" --tag "$IMAGE_NAME"
      - name: Test Docker image
        run: |
          echo "Testing Docker image ($IMAGE_NAME): ${IMAGE_NAME}"
          export FDS_FILE_PATH=/Test_File/test_file.fds
          docker run --rm -e MPI=1 -e FDS_FILE_PATH=/Test_File/test_file.fds $IMAGE_NAME mpiexec -n $MPI
        env:
          PROJECT_NAME: fds-dockerfiles
          MPI: 1
          # OMP_NUM_THREADS: 2
      - name: Push Docker image
        run: |
          echo "Logging in to Docker Hub..."
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_LOGIN }} --password-stdin
          echo "Pushing Docker image: $IMAGE_NAME"
          docker push "$IMAGE_NAME"