- name: Set up test environment
        run: |
          DOCKERFILE_DIR=$(dirname ${{ matrix.dockerfile }})
          cp ./entrypoint.sh $DOCKERFILE_DIR/
          echo "DOCKERFILE_DIR=${DOCKERFILE_DIR}" >> $GITHUB_ENV
          
          # Generate tag from dockerfile path
          TAG=$(echo "${{ matrix.dockerfile }}" | awk -F/ '{print $(NF-1)}' | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${{ secrets.DOCKERHUB_LOGIN }}/fds:${TAG}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "Building image: ${IMAGE_NAME}"
          
          # Create test output directory with proper permissions
          mkdir -p $TEST_OUTPUT_DIR
          chmod 777 $TEST_OUTPUT_DIR

      - name: Run FDS test simulation
        run: |
          echo "Running test simulation with image: $IMAGE_NAME"
          docker run \
            --rm \
            -v "$(pwd)/$TEST_OUTPUT_DIR:/output:rw" \
            -e FDS_FILE_PATH="$TEST_FILE_PATH" \
            -e MPI_PROCESSES="$TEST_MPI_PROCESSES" \
            -e INPUT_ARCHIVE_DIR="Test_File" \
            "$IMAGE_NAME"

      - name: List output directory contents
        run: |
          echo "Output directory contents:"
          ls -la $TEST_OUTPUT_DIR

      - name: Verify test results
        run: |
          echo "Verifying simulation outputs..."
          
          # Check for output files
          for ext in out smv; do
            out_file="$TEST_OUTPUT_DIR/test_file.${ext}"
            if [[ ! -f "$out_file" ]]; then
              echo "Error: ${ext} file not found at: $out_file"
              echo "Directory contents:"
              ls -la "$TEST_OUTPUT_DIR"
              exit 1
            fi
          done
          
          # Check output file contents
          if grep -i "error" "$TEST_OUTPUT_DIR/test_file.out"; then
            echo "Error: Found error messages in simulation output"
            cat "$TEST_OUTPUT_DIR/test_file.out"
            exit 1
          fi
          
          # Check for successful completion
          if ! grep -i "STOP: FDS completed successfully" "$TEST_OUTPUT_DIR/test_file.out"; then
            echo "Error: FDS simulation did not complete successfully"
            cat "$TEST_OUTPUT_DIR/test_file.out"
            exit 1
          fi
          
          echo "Test simulation completed successfully"